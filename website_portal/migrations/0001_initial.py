# Generated by Django 5.1.2 on 2024-11-18 06:20

import django.db.models.deletion
import uuid
import website_portal.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(max_length=20, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=20, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=20, verbose_name='Last Name')),
                ('address', models.CharField(max_length=100, verbose_name='Address')),
                ('phone', models.CharField(max_length=13, verbose_name='Phone Number')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('password', models.CharField(max_length=128, verbose_name='Password')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50)),
                ('emergency_contact_email', models.EmailField(blank=True, max_length=254)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=6, verbose_name='Sex')),
                ('mother_tongue', models.CharField(max_length=30, verbose_name='Mother Tongue')),
                ('religion', models.CharField(max_length=30, verbose_name='Religion')),
                ('learning_mode', models.CharField(choices=[('Modular', 'Modular'), ('Face to face', 'Face to Face'), ('Online', 'Online'), ('Hybrid', 'Hybrid')], max_length=15, verbose_name='Learning Mode')),
                ('payment_method', models.CharField(choices=[('Cash', 'Cash'), ('Bank Transfer', 'Bank Transfer'), ('Mobile Wallet', 'Mobile Wallet')], max_length=15, verbose_name='Payment Method')),
                ('strand', models.CharField(choices=[('STEM', 'STEM'), ('ABM', 'ABM'), ('HUMSS', 'HUMSS'), ('GAS', 'GAS'), ('TVL', 'TVL')], max_length=5, verbose_name='Strand')),
                ('tvl_specifics', models.CharField(blank=True, choices=[('HE - Cookery', 'HE - Cookery'), ('HE - Tourism', 'HE - Tourism'), ('ICT', 'ICT')], max_length=15, verbose_name='Specifics')),
                ('branch', models.CharField(choices=[('La Forteza Campus', 'IIH COLLEGE - La Forteza Campus'), ('Zabarte Fairview Campus', 'IIH COLLEGE - Zabarte Fairview Campus'), ('Novaliches Campus', 'IIH COLLEGE - Novaliches Campus'), ('Brixton Camarin Campus', 'IIH COLLEGE - Brixton Camarin Campus')], max_length=50, verbose_name='Branch')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, help_text='Upload an image (optional, max 5MB).', upload_to='message/', validators=[website_portal.validators.validate_image_size])),
                ('attachment', models.FileField(blank=True, help_text='Upload an optional file (max 10MB).', upload_to='message-attachments/', validators=[website_portal.validators.validate_file_size])),
                ('is_read', models.BooleanField(default=False, verbose_name='Is Read')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website_portal.student')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=50)),
                ('password', models.CharField(blank=True, max_length=128)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, max_length=20, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=20, verbose_name='Last Name')),
                ('teacher_strand', models.CharField(choices=[('STEM', 'STEM'), ('ABM', 'ABM'), ('HUMSS', 'HUMSS'), ('GAS', 'GAS'), ('TVL', 'TVL')], max_length=5, verbose_name='Teacher Strand')),
                ('tvl_options', models.CharField(blank=True, choices=[('HE - Cookery', 'HE - Cookery'), ('HE - Tourism', 'HE - Tourism'), ('ICT', 'ICT')], max_length=15, verbose_name='Teacher TVL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='IIH College', max_length=60)),
                ('event_post', models.TextField(help_text='Enter your event description here.')),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private (Students Only)')], default='public', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, help_text='Upload an event image.', upload_to='event/images')),
                ('attachment', models.FileField(blank=True, help_text='Upload an optional file.', upload_to='event/attachments')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website_portal.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.TextField(help_text='Enter your post here.')),
                ('comment', models.TextField(blank=True, help_text='Enter your comment here.')),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=10)),
                ('image', models.ImageField(blank=True, help_text='Upload an image (max 5MB).', upload_to='community/images', validators=[website_portal.validators.validate_image_size])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attachment', models.FileField(blank=True, help_text='Upload an optional file (max 10MB).', upload_to='community/attachments', validators=[website_portal.validators.validate_file_size])),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website_portal.teacher')),
            ],
            options={
                'verbose_name': 'Community',
                'verbose_name_plural': 'Communities',
                'ordering': ['-created_at'],
            },
        ),
    ]
